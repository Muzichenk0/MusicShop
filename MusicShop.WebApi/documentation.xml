<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MusicShop.WebApi</name>
    </assembly>
    <members>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{MusicShop.WebApi.Controllers.User.UserController},MusicShop.AppData.Contexts.User.Repository.IUserRepository)">
            <summary>
            
            </summary>
            <param name="logger"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.CreateUserAsync(MusicShop.Contracts.User.CreateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Метод-обработчик входящего запроса по маршруту - /user, относительно адреса:порта сервера.
            </summary>
            <param name="userToAdd"></param>
            <param name="token"></param>
        </member>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.GetUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Получение каждого пользователя, асинхронно.
            </summary>
            <param name="token"></param>
        </member>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.GetUserByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Получение пользователя с помощью <paramref name="id"/>
            </summary>
            <param name="id"></param>
            <param name="token"></param>
        </member>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.DeleteUserAsync(MusicShop.Contracts.User.DeleteUserRequest,System.Threading.CancellationToken)">
            <summary>
            Удаление пользователя из базы данных, асинхронно.
            </summary>
            <param name="userToDelete"></param>
            <param name="token"></param>
        </member>
        <member name="M:MusicShop.WebApi.Controllers.User.UserController.UpdateUserAsync(MusicShop.Contracts.User.UpdateUserRequest,System.Threading.CancellationToken)">
            <summary>
            Обновление информации о пользователе, асинхронно.
            </summary>
            <param name="userToDelete"></param>
            <param name="token"></param>
        </member>
    </members>
</doc>
